# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kHakcNNLw2qeh0WQv8-0GfSwuLBiiVzH
"""

import requests
import pandas as pd

"""First, we clivk on the inspect part tab and click network. Then, after right click in this part we copy the curl  and convert it to python code via this [link](https://curlconverter.com/)	"""

headers = {
    'authority': 'api2.realtor.ca',
    'sec-ch-ua': '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
    'accept': '*/*',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'sec-ch-ua-mobile': '?0',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36',
    'sec-ch-ua-platform': '"Linux"',
    'origin': 'https://www.realtor.ca',
    'sec-fetch-site': 'same-site',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    'referer': 'https://www.realtor.ca/',
    'accept-language': 'en-US,en;q=0.9,fa-IR;q=0.8,fa;q=0.7',
    'cookie': 'visid_incap_2269415=SWo1nrNDSl2FyonD176mLhB2gWEAAAAAQUIPAAAAAAB/+E2ij8DP5BcNNcbEMpSb; _fbp=fb.1.1635874324736.1705333370; gig_bootstrap_3_mrQiIl6ov44s2X3j6NGWVZ9SDDtplqV7WgdcyEpGYnYxl7ygDWPQHqQqtpSiUfko=gigya-pr_ver4; visid_incap_2271082=QHd7Q0Q6TQWFBRnvxeFFprJ2gWEAAAAAQUIPAAAAAAD1ovcQm0J0AQoCcy7ZBJXr; nlbi_2269415=2DtFPbyYUytJ4gsckG5lugAAAADNGR0/eHFbPEQwOHje2LdF; incap_ses_1290_2269415=LeDJRE5Unym0J1EsfgDnEXnem2EAAAAAsM1uWdodZ08TWnyCaipSUg==; _gid=GA1.2.712048515.1637604989; ASP.NET_SessionId=2fkuucr4esyo41ej5eohrvju; nlbi_2271082=5ebWZOtUV1FXCmLYcbDG1QAAAACX9pgsdUXN2Bq1Lo0hXDOI; incap_ses_8219_2269415=q9pXNaqq0EfYuuwUOsEPcvianGEAAAAA3xiwOuiYOXWjFnXbL/Gs3g==; incap_ses_8219_2271082=E0G7ZFY9MhWWyuwUOsEPcgWbnGEAAAAASe4hEKrdj0Zeen4wsM4wjw==; nlbi_2269415_2147483646=HjVFYCgpHUylmKRpkG5lugAAAADyr8Rx/egQEUNnUqIDg/tm; _ga=GA1.1.2117568794.1635874324; reese84=3:Cs4pky3QiCxcHDW4gHMbFw==:4IVZUgSqzxreiQgK1BFWEBlTU6O+CKg2wjovFGTFWbYoP9ywjWG7A+p3xl50RL91PzofTrnnwD0soviBcyTJiNb3hQszqSOQtccLHYUt7ygCyKqWdFvyQHfcsUkOA9zxYK6ZeEgz9KalYy3oJ+x13+ToDedwsoikGMTBlR629BMFhGxpip4Yg8gtCydPLHnUzRr5xIRBZ56ti69fBOP1Pvw+pDsq0D1QRv+Sc7o2JV2m74H+X/mlbcBZLv0JPXtlFseEruOhcZRUdn1bxWEGMs5o0rY9WymyT8umlqmZdqLL3cjuxayENmhkrxAkny6r65aZmDChF60OdLUA1y5/+O+BSCXpchoVKC/NsopZ654x67hVAPiHZ1SLh/9gzGaDpq3PH1tIuIN1ERXmHs4ethe2ca7fZBLmCZbomFlTrcA=:MVGYDrEqQEcwSzhpsu0lO5OxOxPqAo4blrg4XI4/8As=; _4c_=fZNNb6MwEIb%2FSsWqnAo12GATiUOVSFGkbHe17V72Ejl4klglGBknNK3y33ec0rBSpeWC5%2FE7HxrPvAf9DppgkuSU5xmlORdpehe8wKkLJu%2BB1cr%2FjsEkkLxaQ0XX0YZTGrFswyMhlIiIqIAQlTEl1sFd8OpjMZpnhKasKNLzXVC1Q4z34GBrDLVzru0m9%2Fd938cWZO2MjSt5v5fttz%2FG7JdwhLpMSDiFxoEtGY05EUTw23Qa8SLGSqnIwqV02h0UfJevXlJQwRCaZnulERcxT3iajFrdeC3juWD%2FaJFGgsSEZlkeHjX0Za07Fz4Z68o8moU%2F52AWqiu3lKxU%2ByYKu%2Bchske5h%2FLZWNM4g8XdpuTHY%2FjTmhasOz2fWphbc2gXszK50ieQttr5u4VC%2FGxl08nKadMMLA2nB2uhqU7l9GGGHa2MAmxaUsRFTNB2b2jl%2FgSNf5jWKjzPH1a%2FFzM00yThWS54wWJ81Exwhg%2BBgtYadajcymEalPWwvunUC14oOOoKVr1Wbufz0Dwf6Q70ducQY8c8ba2X4KnXjTL96JUWbKRXL5wqpEvZbA9yC4Pr0my3oG4WOHbBRtYdIMP2HHVTeQlaU3NonD2hMQe7l80J2S%2FotMKB0LI2dmr2e7C6kn6c7HiDurU1fQe%2BzOnOmj3cFBSpwXEOlro5vKJhYQPYYvuRrNMOLlE%2BB3FguAMjji649f32fagNpvZeuDuohssDjurgPCwC5ZwWuFhCUHw4h9WKnBH%2FnT%2BiXfZCfFGnX9UKuhdn2iHDf3zZV9%2Bj%2FtxiEEUiSKIiztcyYhR4JJNCRYxQRao1obzIgmvIPMsSDMnyISS6ftZeDxGTUZyjPhVp8ilmQ%2F7z%2BS8%3D; _ga_Y07J3B53QP=GS1.1.1637653250.6.1.1637653415.9; _gali=ListViewPagination_Bottom',
}

data = {
  'ZoomLevel': '10',
  'LatitudeMax': '43.93845',
  'LongitudeMax': '-78.71721',
  'LatitudeMin': '43.47684',
  'LongitudeMin': '-80.03556',
  'Sort': '6-D',
  'PropertyTypeGroupID': '1',
  'PropertySearchTypeId': '1',
  'TransactionTypeId': '2',
  'Currency': 'CAD',
  'RecordsPerPage': '12',
  'ApplicationId': '1',
  'CultureId': '1',
  'Version': '7.0',
  'CurrentPage': '1'
}

response = requests.post('https://api2.realtor.ca/Listing.svc/PropertySearch_Post', headers=headers, data=data)

result_json = response.json()

result_json.keys()

result_items = result_json["Results"]

result_items[0]

"""## Extracting data from one ad in the first page."""

#address
address = result_items[0]['Property']['Address']['AddressText']
print(address)

#bedrooms
bedrooms = result_items[0]['Building']['Bedrooms']
print(bedrooms)

#bahrooms
bathrooms = result_items[0]['Building']['BathroomTotal']
print(bathrooms)



#agent name
agent_name = result_items[0]['Individual'][0]['Name']
print(agent_name)

result_items[0]['Individual']

#phone numbe
phone_number = result_items[0]['Individual'][0]['Phones'][0]['AreaCode']
print(phone_number)

result_items[0]['Individual'][0]['Phones'][0]

result_items[0]['Property']['Price']

"""## Extracting the desired data for the entire elements in the page."""

address = []
bedrooms = []
bathrooms = []
agent_name = []
area_code = []
phone_number = []
price = []

for result in result_items:
    
    # address
    try:
        address.append(result['Property']['Address']['AddressText'])
    except:
        address.append('')
    
    
    # bedrooms
    try:
        bedrooms.append(result['Building']['Bedrooms'])
    except:
        bedrooms.append('')
        
    
    # bathrooms
    try:
        bathrooms.append(result['Building']['BathroomTotal'])
    except:
        bathrooms.append('')
    
    # agent name
    try:
        agent_name.append(result['Individual'][0]['Name'])
    except:
        agent_name.append('')
    
    # area code
    try:
        area_code.append(result['Individual'][0]['Phones'][0]['AreaCode'])
    except:
        area_code.append('')
    
    # phone number
    try:
        phone_number.append(result['Individual'][0]['Phones'][0]['PhoneNumber'])
    except:
        phone_number.append('')
    
    # price
    try:
        price.append(result['Property']['Price'])
    except:
        price.append('')

df_realtor = pd.DataFrame({'Address': address, 'Bedrooms': bedrooms, 'Bathrooms':bathrooms,
                          'Agent Name': agent_name, 'Area Code': area_code, 'Telephone': phone_number, 'Price': price})

df_realtor

"""## Extracting the desired data for the entire elements in all the pages."""

address = []
bedrooms = []
bathrooms = []
agent_name = []
area_code = []
phone_number = []
price = []

for i in range(1,51):

    headers = {
        'authority': 'api2.realtor.ca',
        'sec-ch-ua': '"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93"',
        'accept': '*/*',
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36',
        'sec-ch-ua-platform': '"Linux"',
        'origin': 'https://www.realtor.ca',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        'referer': 'https://www.realtor.ca/',
        'accept-language': 'en-US,en;q=0.9,fa-IR;q=0.8,fa;q=0.7',
        'cookie': 'visid_incap_2269415=SWo1nrNDSl2FyonD176mLhB2gWEAAAAAQUIPAAAAAAB/+E2ij8DP5BcNNcbEMpSb; _fbp=fb.1.1635874324736.1705333370; gig_bootstrap_3_mrQiIl6ov44s2X3j6NGWVZ9SDDtplqV7WgdcyEpGYnYxl7ygDWPQHqQqtpSiUfko=gigya-pr_ver4; visid_incap_2271082=QHd7Q0Q6TQWFBRnvxeFFprJ2gWEAAAAAQUIPAAAAAAD1ovcQm0J0AQoCcy7ZBJXr; nlbi_2269415=2DtFPbyYUytJ4gsckG5lugAAAADNGR0/eHFbPEQwOHje2LdF; incap_ses_1290_2269415=LeDJRE5Unym0J1EsfgDnEXnem2EAAAAAsM1uWdodZ08TWnyCaipSUg==; _gid=GA1.2.712048515.1637604989; ASP.NET_SessionId=2fkuucr4esyo41ej5eohrvju; nlbi_2271082=5ebWZOtUV1FXCmLYcbDG1QAAAACX9pgsdUXN2Bq1Lo0hXDOI; incap_ses_8219_2269415=q9pXNaqq0EfYuuwUOsEPcvianGEAAAAA3xiwOuiYOXWjFnXbL/Gs3g==; incap_ses_8219_2271082=E0G7ZFY9MhWWyuwUOsEPcgWbnGEAAAAASe4hEKrdj0Zeen4wsM4wjw==; nlbi_2269415_2147483646=HjVFYCgpHUylmKRpkG5lugAAAADyr8Rx/egQEUNnUqIDg/tm; _ga=GA1.1.2117568794.1635874324; reese84=3:Cs4pky3QiCxcHDW4gHMbFw==:4IVZUgSqzxreiQgK1BFWEBlTU6O+CKg2wjovFGTFWbYoP9ywjWG7A+p3xl50RL91PzofTrnnwD0soviBcyTJiNb3hQszqSOQtccLHYUt7ygCyKqWdFvyQHfcsUkOA9zxYK6ZeEgz9KalYy3oJ+x13+ToDedwsoikGMTBlR629BMFhGxpip4Yg8gtCydPLHnUzRr5xIRBZ56ti69fBOP1Pvw+pDsq0D1QRv+Sc7o2JV2m74H+X/mlbcBZLv0JPXtlFseEruOhcZRUdn1bxWEGMs5o0rY9WymyT8umlqmZdqLL3cjuxayENmhkrxAkny6r65aZmDChF60OdLUA1y5/+O+BSCXpchoVKC/NsopZ654x67hVAPiHZ1SLh/9gzGaDpq3PH1tIuIN1ERXmHs4ethe2ca7fZBLmCZbomFlTrcA=:MVGYDrEqQEcwSzhpsu0lO5OxOxPqAo4blrg4XI4/8As=; _4c_=fZNNb6MwEIb%2FSsWqnAo12GATiUOVSFGkbHe17V72Ejl4klglGBknNK3y33ec0rBSpeWC5%2FE7HxrPvAf9DppgkuSU5xmlORdpehe8wKkLJu%2BB1cr%2FjsEkkLxaQ0XX0YZTGrFswyMhlIiIqIAQlTEl1sFd8OpjMZpnhKasKNLzXVC1Q4z34GBrDLVzru0m9%2Fd938cWZO2MjSt5v5fttz%2FG7JdwhLpMSDiFxoEtGY05EUTw23Qa8SLGSqnIwqV02h0UfJevXlJQwRCaZnulERcxT3iajFrdeC3juWD%2FaJFGgsSEZlkeHjX0Za07Fz4Z68o8moU%2F52AWqiu3lKxU%2ByYKu%2Bchske5h%2FLZWNM4g8XdpuTHY%2FjTmhasOz2fWphbc2gXszK50ieQttr5u4VC%2FGxl08nKadMMLA2nB2uhqU7l9GGGHa2MAmxaUsRFTNB2b2jl%2FgSNf5jWKjzPH1a%2FFzM00yThWS54wWJ81Exwhg%2BBgtYadajcymEalPWwvunUC14oOOoKVr1Wbufz0Dwf6Q70ducQY8c8ba2X4KnXjTL96JUWbKRXL5wqpEvZbA9yC4Pr0my3oG4WOHbBRtYdIMP2HHVTeQlaU3NonD2hMQe7l80J2S%2FotMKB0LI2dmr2e7C6kn6c7HiDurU1fQe%2BzOnOmj3cFBSpwXEOlro5vKJhYQPYYvuRrNMOLlE%2BB3FguAMjji649f32fagNpvZeuDuohssDjurgPCwC5ZwWuFhCUHw4h9WKnBH%2FnT%2BiXfZCfFGnX9UKuhdn2iHDf3zZV9%2Bj%2FtxiEEUiSKIiztcyYhR4JJNCRYxQRao1obzIgmvIPMsSDMnyISS6ftZeDxGTUZyjPhVp8ilmQ%2F7z%2BS8%3D; _ga_Y07J3B53QP=GS1.1.1637653250.6.1.1637653415.9; _gali=ListViewPagination_Bottom',
    }

    data = {
      'ZoomLevel': '10',
      'LatitudeMax': '43.93845',
      'LongitudeMax': '-78.71721',
      'LatitudeMin': '43.47684',
      'LongitudeMin': '-80.03556',
      'Sort': '6-D',
      'PropertyTypeGroupID': '1',
      'PropertySearchTypeId': '1',
      'TransactionTypeId': '2',
      'Currency': 'CAD',
      'RecordsPerPage': '12',
      'ApplicationId': '1',
      'CultureId': '1',
      'Version': '7.0',
      'CurrentPage': str(i)
    }

    # response 
    response = requests.post('https://api2.realtor.ca/Listing.svc/PropertySearch_Post', headers=headers, data=data)
    
    # json object
    result_json = response.json()
    
    # result items
    result_items = result_json['Results']
    
    for result in result_items:
    
        # address
        try:
            address.append(result['Property']['Address']['AddressText'])
        except:
            address.append('')


        # bedrooms
        try:
            bedrooms.append(result['Building']['Bedrooms'])
        except:
            bedrooms.append('')


        # bathrooms
        try:
            bathrooms.append(result['Building']['BathroomTotal'])
        except:
            bathrooms.append('')

        # agent name
        try:
            agent_name.append(result['Individual'][0]['Name'])
        except:
            agent_name.append('')

        # area code
        try:
            area_code.append(result['Individual'][0]['Phones'][0]['AreaCode'])
        except:
            area_code.append('')

        # phone number
        try:
            phone_number.append(result['Individual'][0]['Phones'][0]['PhoneNumber'])
        except:
            phone_number.append('')

        # price
        try:
            price.append(result['Property']['Price'])
        except:
            price.append('')

df_realtor = pd.DataFrame({'Address': address, 'Bedrooms': bedrooms, 'Bathrooms':bathrooms,
                          'Agent Name': agent_name, 'Area Code': area_code, 'Telephone': phone_number, 'Price': price})

df_realtor

df_realtor.to_excel('realtor_multiple_pages.xlsx', index=False)

